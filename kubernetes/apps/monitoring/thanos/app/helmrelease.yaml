---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: thanos
      version: 12.5.1
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      registry: quay.io
      repository: thanos/thanos
      tag: v0.31.0

    existingObjstoreSecret: thanos-objstore

    queryFrontend:
      enabled: true
      ingress:
        enabled: true
        hostname: thanos.${SECRET_DOMAIN}
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "false"
        tls: true
      config: |-
        type: IN-MEMORY
        config:
          max_size: 1GB
          max_size_items: 0
          validity: 0s
    query:
      enabled: true
      replicaCount: 1
      podAntiAffinityPreset: hard
      replicaLabel: ["__replica__"] # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.replicaExternalLabelName`
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "false"
        hostname: &host thanos-query.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host
      extraFlags:
        - --query.auto-downsampling
    bucketweb:
      enabled: true
      replicaCount: 1
      podAntiAffinityPreset: hard
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "false"
        hostname: &host thanos-bucketweb.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host
    compactor:
      enabled: true
      extraFlags: ["--compact.concurrency", "4"]
      retentionResolutionRaw: 180d  # How long to retain raw samples
      retentionResolution5m: 2y  # How long to retain 5 min samples
      # retentionResolution1h: 5y  # How long to retain 1 hour samples
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "false"
        hostname: &host thanos-compactor.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host
      persistence:
        enabled: true
        storageClass: ceph-block
        size: 20Gi
    storegateway:
      enabled: true
      replicaCount: 1
      podAntiAffinityPreset: hard
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "false"
        hostname: &host thanos-storegateway.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host
      persistence:
        enabled: true
        storageClass: ceph-block
        size: 20Gi
    ruler:
      enabled: true
      replicaCount: 1
      podAntiAffinityPreset: hard
      dnsDiscovery:
        enabled: true
      alertmanagers: ["http://kube-prometheus-stack-alertmanager.monitoring:9093"]
      # Breaks any metric that has an existing "cluster" label on a metric
      # clusterName: home # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.externalLabels.cluster`
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: |
            10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
          hajimari.io/enable: "false"
        hostname: &host thanos-ruler.${SECRET_DOMAIN}
        tls: true
        extraTls:
          - hosts:
              - *host
      persistence:
        enabled: true
        storageClass: ceph-block
        size: 20Gi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
