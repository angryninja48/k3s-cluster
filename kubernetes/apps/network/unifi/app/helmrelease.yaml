---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: unifi
  namespace: network
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    # controller:
    #   type: statefulset

    image:
      repository: jacobalberty/unifi
      tag: v8.1.113

    # podAnnotations:
    #   backup.velero.io/backup-volumes: data
    #   pre.hook.backup.velero.io/container: fsfreeze
    #   pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
    #   post.hook.backup.velero.io/container: fsfreeze
    #   post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'

    env:
      RUNAS_UID0: "false"
      UNIFI_UID: "999"
      UNIFI_GID: "999"
      UNIFI_STDOUT: "true"
      JVM_INIT_HEAP_SIZE:
      JVM_MAX_HEAP_SIZE: 1024M
      TZ: ${TIMEZONE}

    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_UNIFI_ADDR}
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 8443
            protocol: HTTPS
          controller:
            enabled: true
            port: 8080
            protocol: TCP
          portal-http:
            enabled: false
            port: 8880
            protocol: HTTP
          portal-https:
            enabled: false
            port: 8843
            protocol: HTTPS
          speedtest:
            enabled: true
            port: 6789
            protocol: TCP
          stun:
            enabled: true
            port: 3478
            protocol: UDP
          syslog:
            enabled: true
            port: 5514
            protocol: UDP
          discovery:
            enabled: true
            port: 10001
            protocol: UDP

    ingress:
      main:
        enabled: true
        ingressClassName: "internal"
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
        tls:
          - hosts:
              - *host

    resources:
      requests:
        cpu: 23m
        memory: 1390M
      limits:
        memory: 1390M

    persistence:
      data:
        enabled: true
        existingClaim: unifi
        mountPath: /unifi

    # additionalContainers:
    #   fsfreeze:
    #     name: fsfreeze
    #     image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
    #     volumeMounts:
    #       - name: data
    #         mountPath: /data
    #     securityContext:
    #       privileged: true
