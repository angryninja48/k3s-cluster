---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  values:
    controller:
      type: statefulset

    image:
      repository: ghcr.io/home-assistant/home-assistant
      tag: 2023.7.2

    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.8
        env:
          - name: POSTGRES_HOST
            value: postgres-rw.databases.svc.cluster.local
          - name: POSTGRES_DB
            value: home-assistant-v2
          - name: POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: postgres-superuser
                key: password
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: hass-secrets
                key: hass-postgres-user
          - name: POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: hass-secrets
                key: hass-postgres-password

    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
      secret.reloader.stakater.com/reload: hass-secrets
    envFrom:
      - secretRef:
          name: hass-secrets

    hostNetwork: true
    dnsPolicy: ClusterFirstWithHostNet

    service:
      main:
        ports:
          http:
            port: 8123
        type: LoadBalancer
        loadBalancerIP: ${SVC_HASS_ADDR}
        externalTrafficPolicy: Local

    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: http
            scheme: http
            path: /api/prometheus
            interval: 60s
            scrapeTimeout: 10s
            bearerTokenSecret:
              name: hass-secrets
              key: SECRET_PROM_TOKEN

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        # annotations:
        #   nginx.ingress.kubernetes.io/ssl-redirect: "false"
        hosts:
          - host: &host "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config
        mountPath: /config

    securityContext:
      privileged: true

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: true

    addons:
      codeserver:
        enabled: true
        image:
          repository: codercom/code-server
          tag: 4.14.0
        env:
          GIT_AUTHOR_NAME: ${SECRET_NAME}
          GIT_COMMITTER_NAME: ${SECRET_NAME}
          GIT_AUTHOR_EMAIL: ${SECRET_EMAIL}
          GIT_COMMITTER_EMAIL: ${SECRET_EMAIL}
        git:
          deployKeySecret: code-server
        workingDir: /config
        args:
          - --auth
          - none
          - --user-data-dir
          - /config/.vscode
          - --extensions-dir
          - /config/.vscode
        ingress:
          enabled: true
          ingressClassName: nginx
          annotations:
            hajimari.io/enable: 'true'
            hajimari.io/icon: microsoft-visual-studio-code
          hosts:
            - host: &host-config "hass-config.${SECRET_DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - *host-config

        volumeMounts:
          - name: config
            mountPath: /config

    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: config
            mountPath: /config
        securityContext:
          privileged: true
